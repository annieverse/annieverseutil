name: Release
on:
  push:
    branches:
      - main
      - next

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all tags and branches
          persist-credentials: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Audit
        run: npm audit signatures

      - name: Check the version
        id: check
        run: |
            CURRENT_VERSION=$(jq -r .version package.json)
            echo "Current version: $CURRENT_VERSION"
            LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
            echo "Latest tag: $LATEST_TAG"

            LATEST_VERSION=${LATEST_TAG#v}

            if [ "$LATEST_VERSION" != "$CURRENT_VERSION" ]; 
            then
              echo "Version changed"
              echo "version_changed=true" >> $GITHUB_OUTPUT
              echo "new_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            else
              echo "Version not changed"
              echo "version_changed=false" >> $GITHUB_OUTPUT
            fi

      - name: Build
        run: npm run build
        if: steps.check.outputs.version_changed == 'true'

      - name: Run release publish
        if: steps.check.outputs.version_changed == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
          
      - name: Run release
        if: steps.check.outputs.version_changed == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release